#!/bin/bash

eval "$(ucr shell)"

# TODO the own turn server configuration could have multiple space separated values
# /var/lib/univention-appcenter/apps/kopano-meet/compose/.env: line 9: turn:turn.domain.com:443?transport=tcp: command not found

update_env_file () {
    varname="$1"
    varvalue="$2"
    if ! grep -q "$varname" ./.env; then
        echo "$varname=$varvalue" >> ./.env
    else
        sed -i "/$varname/c $varname=$varvalue" ./.env
    fi
}

cd /var/lib/univention-appcenter/apps/kopano-meet/compose || exit
touch .env

if [ -e /var/lib/univention-appcenter/apps/kopano-meet/machine.secret ]; then
    echo "ensuring read permissions for konnect container"
    chmod go+r /var/lib/univention-appcenter/apps/kopano-meet/machine.secret
fi

# ask if running with self signed (untrusted) certificates
update_env_file INSECURE "$(ucr get kopano/docker/INSECURE)"
# show Kopano WebApp in app grid
update_env_file GRID_WEBAPP "$(ucr get kopano/docker/GRID_WEBAPP)"
# turn server credentials
update_env_file TURN_USER "$(ucr get kopano/docker/TURN_USER)"
update_env_file TURN_PASSWORD "$(ucr get kopano/docker/TURN_PASSWORD)"
update_env_file TURN_SERVICE_URL "$(ucr get kopano/docker/TURN_SERVICE_URL)"
# set when using an own turn service
update_env_file TURN_URIS "$(ucr get kopano/docker/TURN_URIS)"
update_env_file TURN_SERVER_SHARED_SECRET "$(ucr get kopano/docker/TURN_SERVER_SHARED_SECRET)"
# allow guests to enter designated rooms
update_env_file MEET_GUEST_ALLOW "$(ucr get kopano/docker/MEET_GUEST_ALLOW)"
if [ "$(ucr get kopano/docker/MEET_GUEST_ALLOW)" = "yes" ]; then
	update_env_file MEET_GUEST_BOOLALLOW true
else
	update_env_file MEET_GUEST_BOOLALLOW false
fi
update_env_file MEET_GUEST_REGEXP "$(ucr get kopano/docker/MEET_GUEST_REGEXP)"
# hostname from which meet can be accessed
update_env_file FQDN_MEET "$(ucr get kopano/docker/FQDN_MEET)"
# hostname for external auth
update_env_file FQDN_SSO "$(ucr get kopano/docker/FQDN_SSO)"
# settings related to kopano-kwmbridge (SFU)
update_env_file ENABLE_MCU_API "$(ucr get kopano/docker/ENABLE_MCU_API)"
update_env_file PIPELINE_FORCED_REGEXP "$(ucr get kopano/docker/PIPELINE_FORCED_REGEXP)"

# source .env to have access to previously set hostname
# shellcheck disable=SC1091
source /var/lib/univention-appcenter/apps/kopano-meet/compose/.env

# apache2 conf
cat << EOF >/etc/apache2/ucs-sites.conf.d/kopano-meet.conf
# Auto generated config. Please do not make changes as they will be overwritten!
# Please check https://stash.z-hub.io/projects/K4U/repos/kopano-apps/browse/kopano-meet for instructions how to put an additional proxy in front of Meet.
Header unset X-Frame-Options
Header unset Content-Security-Policy
ProxyPass /meet http://127.0.0.1:2015/meet retry=0
ProxyPass /api/config/v1/kopano/meet/ http://127.0.0.1:2015/api/config/v1/kopano/meet/ retry=0
ProxyPass /api/gc/v1/ http://127.0.0.1:2015/api/gc/v1/ retry=0
ProxyPass /api/kvs/v1/ http://127.0.0.1:2015/api/kvs/v1/ retry=0
ProxyPass /meetid/.well-known/openid-configuration http://127.0.0.1:2015/.well-known/openid-configuration retry=0
ProxyPass /meetid/ http://127.0.0.1:2015/meetid/ retry=0

RewriteEngine On
# Meet and PWAs only work on https
RewriteCond %{HTTPS} off
RewriteCond %{REQUEST_URI} ^/meet$ [OR]
RewriteCond %{REQUEST_URI} ^/meet/
RewriteRule ^(.*)$ https://$FQDN_MEET/meet/ [R,L]
# We need to access Meet through the proper domain
RewriteCond %{REQUEST_URI} ^/meet$ [OR]
RewriteCond %{REQUEST_URI} ^/meet/
RewriteCond %{HTTP_HOST} !^$FQDN_MEET$ [NC]
RewriteRule ^(.*)$ https://$FQDN_MEET/meet/ [R,L]
# Upgrade Websocket connections
RewriteCond %{HTTP:Connection} Upgrade [NC]
RewriteCond %{HTTP:Upgrade} websocket [NC]
RewriteRule /api/kwm/v2/(.*) ws://127.0.0.1:2015/api/kwm/v2/\$1 [P,L]

ProxyPass /api/kwm/v2/ http://127.0.0.1:2015/api/kwm/v2/ retry=0

EOF

a2enmod proxy_wstunnel rewrite

# activate apache settings and meet config for apache
invoke-rc.d apache2 reload

if [ "$1" = "settings" ]; then
    docker-compose up -d
    ucsrole=$(ucr get server/role)
    case $ucsrole in
        domaincontroller_master|domaincontroller_backup)
            # we can only automatically run the join script on a master or backup
            univention-run-join-scripts --force --run-scripts 50kopano-meet.inst
            ;;
        *)
            # for other roles we need to resort to resetting the join status for Meet
            sed -i "/^kopano-meet v/d" /var/univention-join/status
            ;;
    esac
fi
