#!/bin/bash

set -e
set -x

eval "$(ucr shell)"

DOCKERIZE_VERSION=0.11.0

if ! command -v dockerize > /dev/null; then
	curl -sfL "https://github.com/powerman/dockerize/releases/download/v$DOCKERIZE_VERSION/dockerize-$(uname -s)-$(uname -m)" \
	| install /dev/stdin /usr/local/bin/dockerize
	dockerize --version
fi

fqdn="$(ucr get kopano/docker/FQDN_MEET)"
# hostname is defined through "$(ucr shell)", have a fallback to satisfy shellcheck
hostname=${hostname:-127.0.0.1}

# access Meet on the proper domain
dockerize -wait "https://$fqdn/meet"
# access Meet config document
dockerize -wait "https://$fqdn/api/config/v1/kopano/meet/config.json"
# accessing Meet via http should give a 302 redirect
dockerize -wait http://127.0.0.1/meet/ -wait-http-skip-redirect -wait-http-status-code 302
# accessing Meet on another domain should give a 302 redirect (skip tls since 127.0.0.1 is not in the cert)
dockerize -skip-tls-verify -wait https://127.0.0.1/meet/ -wait-http-skip-redirect -wait-http-status-code 302
# accessing Meet on another domain should give a 302 redirect
dockerize -skip-tls-verify -wait "https://$hostname/meet/" -wait-http-skip-redirect -wait-http-status-code 302
# access openid-config document
dockerize -wait "https://$fqdn/meetid/.well-known/openid-configuration"
# access jwk document
dockerize -wait "https://$fqdn/meetid/konnect/v1/jwks.json"
# access to rest api
dockerize -wait "https://$fqdn/api/gc/v1/" -wait-http-status-code 403
dockerize -wait "https://$fqdn/api/kvs/v1/kv/user/kopano-meet-recents" -wait-http-status-code 403
